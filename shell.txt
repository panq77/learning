#!后面的路径指定解释该脚本文件的shell程序

echo 输出

定义变量 变量名=变量值 不能有空格 变量名不能有空格和标点符号 不能是bash的关键字 可以使用_

readonly 变量名    只读变量 不允许修改

$变量名 获取该变量的值

unset 变量名 删除变量 删除后不能使用 不能删除只读变量

获取字符串长度  ${#str} 

截取字符串 ${str:1:4} 

查找子字符串 echo `expr index "$str" mt`查找到第一个返回 值不是索引

shell 数组 array=("ssd" "ssdas") echo ${#str[1]} #返回长度 或者数组的个数  []中的值为确定值 返回这个元素的长度

shell注释  多行注释 << (tag)   在结束的地方标记tag 
           单行注释 #

传递参数 $n 获取参数值  对参数的处理 $# 传递参数的个数 $*将传递的参数以字符串返回

shell中表达式用反引号 expr后跟表达式 和运算符之间需要空格隔开 条件表达式 放在[]中

*号 必须加\ 才能进行乘法运算

if判断语句 语法 if 条件表达式 then ...else ..... fi 

关系运算符  
     -eq   相等返回true
	 -ne   不相等返回true
	 -gt   左边大于右边 返回true
	 -lt   右边小于右边返回true
	 -ge   左边大于等于右边返回true
	 -le   左边小于等于右边返回true
	 
布尔运算符
     ！   非运算 true返回false
	 -o   或运算 
	 -a   与运算
	 
逻辑运算符
    && and
	|| or

字符串运算符 = != -z 长度为0返回true  -n不为0返回true  $ [ $a ] 不为空返回true 

文件测试运算符
   -b file 是否为块文件
   -c      是否为字符设备文件
   -d      是否为目录
   -f      是否为普通文件
   -g      是否设置了SGID位
   -k      是否设置了粘着位
   -p      是否是有名管道
   -u      是否设置了SUID
   -r      文件是否可读
   -w      是否可写
   -x      是否可执行
   -s      文件是否为空
   -e      文件是否存在

